# name: VishwamAI Tests

# on:
#   push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main, develop ]
#   schedule:
#     - cron: '0 0 * * *'  # Daily at midnight UTC
#   workflow_dispatch: # Manual trigger

# jobs:
#   test-cpu:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.8, 3.9, '3.10', '3.11']

#     steps:
#     - uses: actions/checkout@v3
  
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}
  
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -e ".[cpu,dev]"
  
#     - name: Run CPU tests
#       run: make test-cpu TEST_TYPE=all
  
#     - name: Upload test results
#       uses: actions/upload-artifact@v3
#       with:
#         name: cpu-test-results-${{ matrix.python-version }}
#         path: test_reports/

#   test-gpu:
#     runs-on: ubuntu-latest
#     needs: test-cpu  # Run CPU tests first
  
#     steps:
#     - uses: actions/checkout@v3
  
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'
  
#     - name: Install CUDA
#       uses: Jimver/cuda-toolkit@v0.2.11
#       with:
#         cuda: '11.8.0'
  
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -e ".[gpu,dev]"
  
#     - name: Run GPU tests
#       run: make test-gpu TEST_TYPE=all
  
#     - name: Upload test results
#       uses: actions/upload-artifact@v3
#       with:
#         name: gpu-test-results
#         path: test_reports/

#   test-tpu:
#     runs-on: ubuntu-latest
#     needs: test-cpu  # Run CPU tests first
#     if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'  # Only run on schedule or manual trigger
  
#     steps:
#     - uses: actions/checkout@v3
  
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'
  
#     - name: Setup Google Cloud
#       uses: google-github-actions/auth@v1
#       with:
#         credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
    
#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@v1
#       with:
#         version: '>= 363.0.0'
#         project_id: ${{ secrets.GCP_PROJECT_ID }}
  
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -e ".[tpu,dev]"
  
#     - name: Create TPU resources
#       run: make resources-up PLATFORM=tpu
  
#     - name: Run TPU tests
#       run: make test-tpu TEST_TYPE=all
  
#     - name: Cleanup TPU resources
#       if: always()  # Run even if tests fail
#       run: make resources-down PLATFORM=tpu
  
#     - name: Upload test results
#       uses: actions/upload-artifact@v3
#       with:
#         name: tpu-test-results
#         path: test_reports/

#   generate-report:
#     runs-on: ubuntu-latest
#     needs: [test-cpu, test-gpu]  # Make TPU optional
#     if: always()  # Run even if some tests fail
  
#     steps:
#     - uses: actions/checkout@v3
  
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'
  
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -e ".[dev]"
  
#     - name: Download all test results
#       uses: actions/download-artifact@v3
#       with:
#         path: test_reports/
  
#     - name: Generate report and visualizations
#       run: |
#         make report
#         make visualize
  
#     - name: Create combined artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: test-report-and-visualizations
#         path: |
#           test_reports/
#           visualizations/
  
#     - name: Update workflow summary
#       run: |
#         echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
#         echo "üìä [Full Report](test_reports/latest_report.md)" >> $GITHUB_STEP_SUMMARY
#         echo "üéØ [Visualizations](visualizations/)" >> $GITHUB_STEP_SUMMARY

#   notify:
#     runs-on: ubuntu-latest
#     needs: generate-report
#     if: always()
  
#     steps:
#     - uses: technote-space/workflow-conclusion-action@v3
  
#     - name: Send Slack notification
#       if: env.SLACK_WEBHOOK_URL != ''
#       uses: 8398a7/action-slack@v3
#       env:
#         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#       with:
#         status: ${{ job.status }}
#         fields: repo,message,commit,author,action,eventName,ref,workflow
  
#     - name: Send email notification
#       if: failure() && env.EMAIL_USERNAME != ''
#       uses: dawidd6/action-send-mail@v3
#       env:
#         EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
#         EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
#         NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
#       with:
#         server_address: smtp.gmail.com
#         server_port: 465
#         username: ${{ env.EMAIL_USERNAME }}
#         password: ${{ env.EMAIL_PASSWORD }}
#         subject: "‚ö†Ô∏è VishwamAI Test Workflow Failed"
#         body: |
#           Test workflow failed!
#           See details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
#         to: ${{ env.NOTIFICATION_EMAIL }}
#         from: VishwamAI Tests
