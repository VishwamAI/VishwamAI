[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vishwamai"
version = "0.1.0"
authors = [
    {name = "VishwamAI Team", email = "contact@vishwamai.ai"},
]
description = "Efficient multimodal AI framework with curriculum learning support"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["ai", "machine-learning", "deep-learning", "jax", "flax", "multimodal", "curriculum-learning"]
dependencies = [
    "jax>=0.4.13",
    "jaxlib>=0.4.13",
    "flax>=0.7.5",
    "optax>=0.1.7",
    "transformers>=4.36.0",
    "torch==2.6.0",
    "numpy>=1.24.0",
    "safetensors>=0.4.0",
    "datasets>=2.14.0",
    "sentencepiece==0.2.0",
    "tokenizers>=0.15.0",
    "huggingface-hub>=0.19.0",
    "einops==0.8.1",
    "chex==0.1.89",
    "jaxtyping==0.2.38",
    "optree==0.14.1",
    "orbax-checkpoint==0.11.8",
    "tqdm>=4.65.0",
    "scipy==1.11.4",
    "ml_collections==1.0.0",
    "typing_extensions==4.12.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-env>=1.1.0",
    "ipython==8.20.0",
    "jupyter==1.0.0",
    "notebook==6.4.12",
    "matplotlib>=3.8.0",
    "psutil>=5.9.0",
]
wandb = ["wandb>=0.15.0"]
data = [
    "duckdb>=0.9.0",
    "pandas>=2.0.0",
    "pyarrow==16.1.0",
]
hydra = ["hydra-core==1.3.2"]
sonar = [
    "fairseq2",
    "editdistance~=0.8",
    "importlib_metadata~=7.0",
    "importlib_resources~=6.4",
    "sacrebleu~=2.4",
]
all = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-env>=1.1.0",
    "ipython==8.20.0",
    "jupyter==1.0.0",
    "notebook==6.4.12",
    "matplotlib>=3.8.0",
    "psutil>=5.9.0",
    "wandb>=0.15.0",
    "duckdb>=0.9.0",
    "pandas>=2.0.0",
    "pyarrow==16.1.0",
    "hydra-core==1.3.2",
    "fairseq2",
    "editdistance~=0.8",
    "importlib_metadata~=7.0",
    "importlib_resources~=6.4",
    "sacrebleu~=2.4",
]

# [project.scripts]
# vishwamai-setup = "setup_vishwamai:main"

[project.urls]
Homepage = "https://github.com/VishwamAI/VishwamAI"
Documentation = "https://github.com/VishwamAI/VishwamAI/tree/main/docs"
Repository = "https://github.com/VishwamAI/VishwamAI"
"Bug Tracker" = "https://github.com/VishwamAI/VishwamAI/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["vishwamai*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
vishwamai = ["configs/*.json"]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=vishwamai",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-branch",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["vishwamai"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
